{"version":3,"file":"VueFinalModal.esm.js","sources":["../lib/utils/focusTrap.js","../lib/utils/dragResize.js","../lib/utils/bodyScrollLock.js","../lib/VueFinalModal.vue","../lib/VueFinalModal.vue?vue&type=template&id=2836fdb5&lang.js","../node_modules/style-inject/dist/style-inject.es.js","../lib/ModalsContainer.vue","../lib/ModalsContainer.vue?vue&type=template&id=74d49173&lang.js","../lib/PluginCore.js","../lib/Plugin.js"],"sourcesContent":["// stolen from vue-js-modal\n\nconst FOCUSABLE_ELEMENTS_QUERY =\n  'button:not([disabled]), ' +\n  'select:not([disabled]), ' +\n  'a[href]:not([disabled]), ' +\n  'area[href]:not([disabled]), ' +\n  '[contentEditable=\"\"]:not([disabled]), ' +\n  '[contentEditable=\"true\"]:not([disabled]), ' +\n  '[contentEditable=\"TRUE\"]:not([disabled]), ' +\n  'textarea:not([disabled]), ' +\n  'iframe:not([disabled]), ' +\n  'input:not([disabled]), ' +\n  'summary:not([disabled]), ' +\n  '[tabindex]:not([tabindex=\"-1\"])'\n\nconst isTabPressed = event => {\n  return event.key === 'Tab' || event.keyCode === 9\n}\n\nconst querySelectorAll = (element, selector) => {\n  return [...(element.querySelectorAll(selector) || [])]\n}\n\nconst queryFocusableElements = element => {\n  return querySelectorAll(element, FOCUSABLE_ELEMENTS_QUERY)\n}\n\nconst isFocused = element => {\n  return element == document.activeElement\n}\n\nconst isNothingFocused = () => {\n  return !document.activeElement\n}\n\nclass FocusTrap {\n  constructor() {\n    this.root = null\n    this.elements = []\n\n    this.onKeyDown = this.onKeyDown.bind(this)\n  }\n\n  /**\n   * Get last Element on the trap\n   *\n   * @return {HTMLElement | null} element\n   */\n  get lastElement() {\n    return this.elements[this.elements.length - 1] || null\n  }\n\n  /**\n   * Get first Element on the trap\n   *\n   * @return {HTMLElement | null} element\n   */\n  get firstElement() {\n    return this.elements[0] || null\n  }\n\n  /**\n   * Get whether the trap is enabled\n   *\n   * @return {boolean} isEnabled\n   */\n  get isEnabled() {\n    return !!this.root\n  }\n\n  onKeyDown(event) {\n    if (!isTabPressed(event)) {\n      return\n    }\n\n    // SHIFT + TAB\n    if (event.shiftKey) {\n      if (isFocused(this.firstElement)) {\n        this.lastElement.focus()\n        event.preventDefault()\n      }\n      return\n    }\n\n    // TAB\n    if (isNothingFocused() || isFocused(this.lastElement)) {\n      this.firstElement.focus()\n      event.preventDefault()\n      return\n    }\n  }\n\n  /**\n   * Enable focus trap\n   *\n   * @param {HTMLElement} root - the focus trap root element\n   */\n  enable(root) {\n    if (!root) {\n      return\n    }\n\n    this.root = root\n    this.elements = queryFocusableElements(this.root)\n\n    this.root.addEventListener('keydown', this.onKeyDown)\n  }\n\n  /**\n   * Disable focus trap\n   */\n  disable() {\n    this.root.removeEventListener('keydown', this.onKeyDown)\n    this.root = null\n  }\n}\n\n/**\n * @type {FocusTrap | null}\n */\nlet instance = null\n\n/**\n * Get FocusTrap instance\n *\n * @returns {FocusTrap} focusTrap\n */\nexport function useFocusTrap() {\n  if (instance == null) {\n    instance = new FocusTrap()\n  }\n\n  return instance\n}\n","export const setStyle = (el, key, value) => {\n  const cacheStyle = el.style[key]\n  el.style[key] = value\n  return () => {\n    el.style[key] = cacheStyle\n  }\n}\n\nexport const getPosition = e => {\n  const { clientX: x, clientY: y } = e.targetTouches ? e.targetTouches[0] : e\n  return { x, y }\n}\n\nexport const capitalize = s => {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nexport const clamp = (min, num, max) => {\n  if (typeof min !== 'number') {\n    min = Math.min(num, max) || num\n  }\n  if (typeof max !== 'number') {\n    max = Math.max(num, min)\n  }\n  return Math.min(Math.max(num, min), max)\n}\n\nexport const trimPx = distance => {\n  return (distance && Number(distance.replace(/px$/, ''))) || 0\n}\n\nexport const validDragElement = (e, el, dragSelector) => {\n  if (dragSelector === '') return true\n  const list = [...el.querySelectorAll(dragSelector)]\n  return list.includes(e.target)\n}\n\nconst pointerType = {\n  down: {\n    pc: 'mousedown',\n    m: 'touchstart'\n  },\n  move: {\n    pc: 'mousemove',\n    m: 'touchmove'\n  },\n  up: {\n    pc: 'mouseup',\n    m: 'touchend'\n  }\n}\nexport const addListener = (type, el, callback) => {\n  el && el.addEventListener(pointerType[type].pc, callback)\n  el && el.addEventListener(pointerType[type].m, callback, { passive: false })\n}\nexport const removeListener = (type, el, callback) => {\n  el && el.removeEventListener(pointerType[type].pc, callback)\n  el && el.removeEventListener(pointerType[type].m, callback)\n}\n","// stolen from body-scroll-lock\n\n// Older browsers don't support event options, feature detect it.\nlet hasPassiveEvents = false\nif (typeof window !== 'undefined') {\n  const passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true\n      return undefined\n    }\n  }\n  window.addEventListener('testPassive', null, passiveTestOptions)\n  window.removeEventListener('testPassive', null, passiveTestOptions)\n}\n\nconst isIosDevice =\n  typeof window !== 'undefined' &&\n  window.navigator &&\n  window.navigator.platform &&\n  (/iP(ad|hone|od)/.test(window.navigator.platform) ||\n    (window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1))\n\nlet locks = []\nlet documentListenerAdded = false\nlet clientY = 0\nlet initialClientY = -1\nlet previousBodyOverflowSetting\nlet previousBodyPaddingRight\n\nconst hasScrollbar = el => {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n  const style = window.getComputedStyle(el)\n  return ['auto', 'scroll'].includes(style.overflowY) && el.scrollHeight > el.clientHeight\n}\n\nconst shouldScroll = (el, delta) => {\n  if (el.scrollTop === 0 && delta < 0) return false\n  if (el.scrollTop + el.clientHeight + delta >= el.scrollHeight && delta > 0) return false\n  return true\n}\n\nconst composedPath = el => {\n  const path = []\n  while (el) {\n    path.push(el)\n    if (el.classList.contains('vfm')) return path\n    el = el.parentElement\n  }\n  return path\n}\n\nconst hasAnyScrollableEl = (el, delta) => {\n  let hasAnyScrollableEl = false\n  const path = composedPath(el)\n  path.forEach(el => {\n    if (hasScrollbar(el) && shouldScroll(el, delta)) {\n      hasAnyScrollableEl = true\n    }\n  })\n  return hasAnyScrollableEl\n}\n\n// returns true if `el` should be allowed to receive touchmove events.\nconst allowTouchMove = el => locks.some(() => hasAnyScrollableEl(el, -clientY))\n\nconst preventDefault = rawEvent => {\n  const e = rawEvent || window.event\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true\n  }\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true\n\n  if (e.preventDefault) e.preventDefault()\n\n  return false\n}\n\nconst setOverflowHidden = options => {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    const reserveScrollBarGap = !!options && options.reserveScrollBarGap === true\n    const scrollBarGap = window.innerWidth - document.documentElement.clientWidth\n\n    if (reserveScrollBarGap && scrollBarGap > 0) {\n      const computedBodyPaddingRight = parseInt(getComputedStyle(document.body).getPropertyValue('padding-right'), 10)\n      previousBodyPaddingRight = document.body.style.paddingRight\n      document.body.style.paddingRight = `${computedBodyPaddingRight + scrollBarGap}px`\n    }\n  }\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow\n    document.body.style.overflow = 'hidden'\n  }\n}\n\nconst restoreOverflowSetting = () => {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined\n  }\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nconst isTargetElementTotallyScrolled = targetElement =>\n  targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false\n\nconst handleScroll = (event, targetElement) => {\n  clientY = event.targetTouches[0].clientY - initialClientY\n\n  if (allowTouchMove(event.target)) {\n    return false\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event)\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event)\n  }\n\n  event.stopPropagation()\n  return true\n}\n\nexport const disableBodyScroll = (targetElement, options) => {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(lock => lock.targetElement === targetElement)) {\n    return\n  }\n\n  const lock = {\n    targetElement,\n    options: options || {}\n  }\n\n  locks = [...locks, lock]\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY\n      }\n    }\n    targetElement.ontouchmove = event => {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement)\n      }\n    }\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = true\n    }\n  } else {\n    setOverflowHidden(options)\n  }\n}\n\nexport const enableBodyScroll = targetElement => {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.'\n    )\n    return\n  }\n\n  locks = locks.filter(lock => lock.targetElement !== targetElement)\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null\n    targetElement.ontouchmove = null\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined)\n      documentListenerAdded = false\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting()\n  }\n}\n","<template>\n  <div\n    v-if=\"ssr || visible\"\n    v-show=\"!ssr || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': preventClick }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition\n      v-bind=\"computedOverlayTransition\"\n      @before-enter=\"beforeOverlayEnter\"\n      @after-enter=\"afterOverlayEnter\"\n      @before-leave=\"beforeOverlayLeave\"\n      @after-leave=\"afterOverlayLeave\"\n    >\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition\n      v-bind=\"computedTransition\"\n      @before-enter=\"beforeModalEnter\"\n      @after-enter=\"afterModalEnter\"\n      @before-leave=\"beforeModalLeave\"\n      @after-leave=\"afterModalLeave\"\n    >\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @mouseup.self=\"onMouseupContainer\"\n        @mousedown.self=\"onMousedown\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': preventClick }]\"\n          :style=\"bindContentStyle\"\n          @mousedown=\"onMousedown(null)\"\n        >\n          <slot :params=\"params\" :close=\"() => $emit('update:modelValue', false)\" />\n          <div\n            v-if=\"visibility.resize && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-mutating-props */\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch } from 'vue'\nimport { useFocusTrap } from './utils/focusTrap.js'\nimport {\n  setStyle,\n  getPosition,\n  capitalize,\n  clamp,\n  trimPx,\n  validDragElement,\n  addListener,\n  removeListener\n} from './utils/dragResize.js'\nimport { disableBodyScroll, enableBodyScroll } from './utils/bodyScrollLock'\n\nconst noop = () => {}\n\nconst TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nconst resizeCursor = {\n  t: 'ns-resize',\n  tr: 'nesw-resize',\n  r: 'ew-resize',\n  br: 'nwse-resize',\n  b: 'ns-resize',\n  bl: 'nesw-resize',\n  l: 'ew-resize',\n  tl: 'nwse-resize'\n}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    ssr: { type: Boolean, default: true },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    preventClick: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    keepOverlay: { type: Boolean, default: false },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: Number, default: 0 },\n    minHeight: { type: Number, default: 0 },\n    maxWidth: { type: Number, default: Infinity },\n    maxHeight: { type: Number, default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const modalStackIndex = ref(null)\n    const $focusTrap = useFocusTrap()\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false,\n      resize: false\n    })\n    const overlayTransitionState = ref(null)\n    const modalTransitionState = ref(null)\n    const _stopEvent = ref(false)\n    const params = ref({})\n    const dragResizeStyle = ref({})\n    const _state = ref(null)\n    const lastMousedownEl = ref(null)\n\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n    watch(() => props.lockScroll, handleLockScroll)\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n    watch(() => props.attach, mounted)\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n    watch(\n      () => props.drag,\n      val => {\n        if (visible.value) {\n          val ? addDragDown() : removeDragDown()\n        }\n      }\n    )\n    watch(\n      () => props.resize,\n      val => {\n        if (visible.value) {\n          val ? addResizeDown() : removeResizeDown()\n        }\n      }\n    )\n    watch(\n      () => props.keepChangedStyle,\n      val => {\n        if (!val) {\n          dragResizeStyle.value = {}\n        }\n      }\n    )\n\n    props.api.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n    onBeforeUnmount(() => {\n      close()\n      props.lockScroll && vfmContainer.value && enableBodyScroll(vfmContainer.value)\n      root?.value?.remove()\n\n      let index = props.api.modals.findIndex(vm => vm.uid === uid)\n\n      props.api.modals.splice(index, 1)\n    })\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        $focusTrap,\n        toggle,\n        params\n      }\n    }\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          if (props.attach !== false) {\n            if (root.value) {\n              target.appendChild(root.value)\n            } else {\n              visible.value = true\n              nextTick(() => {\n                mounted()\n              })\n              return\n            }\n          }\n\n          let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            props.api.openedModals.splice(index, 1)\n          }\n          props.api.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = props.api.openedModals.length - 1\n\n          handleLockScroll()\n\n          props.api.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                !vm.props.keepOverlay && (vm.visibility.overlay = false)\n              }\n            })\n\n          visible.value = true\n          startTransitionEnter()\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n    function close() {\n      let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        props.api.openedModals.splice(index, 1)\n      }\n      if (props.api.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = props.api.openedModals[props.api.openedModals.length - 1]\n\n        if ($_vm.props.focusTrap) {\n          nextTick(() => {\n            $_vm.$focusTrap.enable($_vm.vfmContainer.value)\n            $_vm.$focusTrap.firstElement.focus()\n          })\n        }\n\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      _state.value = null\n\n      startTransitionLeave()\n    }\n    function handleLockScroll() {\n      if (props.modelValue) {\n        nextTick(() => {\n          if (props.lockScroll) {\n            disableBodyScroll(vfmContainer.value, {\n              reserveScrollBarGap: true\n            })\n          } else {\n            enableBodyScroll(vfmContainer.value)\n          }\n        })\n      }\n    }\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function beforeOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Entering\n    }\n    function afterOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Enter\n    }\n    function beforeOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leaving\n    }\n    function afterOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leave\n    }\n    function beforeModalEnter() {\n      modalTransitionState.value = TransitionState.Entering\n    }\n    function afterModalEnter() {\n      modalTransitionState.value = TransitionState.Enter\n      if (props.focusRetain || props.focusTrap) {\n        vfmContainer.value.focus()\n      }\n      props.focusTrap && $focusTrap.enable(vfmContainer.value)\n      props.drag && addDragDown()\n      props.resize && addResizeDown()\n\n      emit('_opened')\n      emit('opened', createModalEvent({ type: 'opened' }))\n      resolveToggle('show')\n    }\n    function beforeModalLeave() {\n      modalTransitionState.value = TransitionState.Leaving\n\n      if ($focusTrap.isEnabled) {\n        $focusTrap.disable()\n      }\n    }\n    function afterModalLeave() {\n      modalTransitionState.value = TransitionState.Leave\n      modalStackIndex.value = null\n      props.lockScroll && enableBodyScroll(vfmContainer.value)\n      if (!props.keepChangedStyle) {\n        dragResizeStyle.value = {}\n      }\n\n      let stopEvent = false\n      const event = createModalEvent({\n        type: 'closed',\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit('_closed')\n      emit('closed', event)\n      resolveToggle('hide')\n      if (stopEvent) return\n      params.value = {}\n    }\n    function onMousedown(e) {\n      lastMousedownEl.value = e?.target\n    }\n    function onMouseupContainer() {\n      // skip when the lastMousedownEl didn't equal vfmContainer\n      if (lastMousedownEl.value !== vfmContainer.value) return\n      // skip when state equal 'resize:move'\n      if (_state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n    function emitState(e, state, action) {\n      _state.value = `${state}:${action}`\n      emit(_state.value, e)\n    }\n    function toggle(show, _params) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        if (value && arguments.length === 2) {\n          params.value = _params\n        }\n        emit('update:modelValue', value)\n      })\n    }\n    function pointerDown(e) {\n      e.stopPropagation()\n      const STATE_RESIZE = 'resize'\n      const STATE_DRAG = 'drag'\n      const direction = e.target.getAttribute('direction')\n      let state\n      if (direction) {\n        state = STATE_RESIZE\n      } else if (validDragElement(e, vfmContent.value, props.dragSelector)) {\n        state = STATE_DRAG\n      } else {\n        return\n      }\n      emitState(e, state, 'start')\n      const down = getPosition(e)\n      const rectContainer = vfmContainer.value.getBoundingClientRect()\n      const rectContent = vfmContent.value.getBoundingClientRect()\n      const isAbsolute = window.getComputedStyle(vfmContent.value).position === 'absolute'\n      const position = {\n        top: trimPx(dragResizeStyle.value.top),\n        left: trimPx(dragResizeStyle.value.left)\n      }\n      const limit = (() => {\n        if (props.fitParent) {\n          const limit = {\n            absolute() {\n              return {\n                minTop: 0,\n                minLeft: 0,\n                maxTop: rectContainer.height - rectContent.height,\n                maxLeft: rectContainer.width - rectContent.width\n              }\n            },\n            relative() {\n              return {\n                minTop: position.top + rectContainer.top - rectContent.top,\n                minLeft: position.left + rectContainer.left - rectContent.left,\n                maxTop: position.top + rectContainer.bottom - rectContent.bottom,\n                maxLeft: position.left + rectContainer.right - rectContent.right\n              }\n            }\n          }\n          return isAbsolute ? limit.absolute() : limit.relative()\n        } else {\n          return {}\n        }\n      })()\n      const resetBodyCursor = state === STATE_RESIZE && setStyle(document.body, 'cursor', resizeCursor[direction])\n\n      const moving = e => {\n        // onPointerMove\n        e.stopPropagation()\n        emitState(e, state, 'move')\n        const move = getPosition(e)\n        let offset = {\n          x: move.x - down.x,\n          y: move.y - down.y\n        }\n        if (state === STATE_RESIZE) {\n          offset = getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute)\n        }\n\n        let top\n        let left\n        if (isAbsolute) {\n          top = rectContent.top - rectContainer.top + offset.y\n          left = rectContent.left - rectContainer.left + offset.x\n        } else {\n          top = position.top + offset.y\n          left = position.left + offset.x\n        }\n        if (state === STATE_DRAG && props.fitParent) {\n          top = clamp(limit.minTop, top, limit.maxTop)\n          left = clamp(limit.minLeft, left, limit.maxLeft)\n        }\n        const style = {\n          position: 'relative',\n          top: top + 'px',\n          left: left + 'px',\n          margin: 'unset',\n          touchAction: 'none',\n          ...(isAbsolute && {\n            position: 'absolute',\n            transform: 'unset',\n            width: rectContent.width + 'px',\n            height: rectContent.height + 'px'\n          }),\n          ...(offset.width && { width: offset.width + 'px' }),\n          ...(offset.height && { height: offset.height + 'px' })\n        }\n\n        dragResizeStyle.value = {\n          ...dragResizeStyle.value,\n          ...style\n        }\n      }\n      const end = e => {\n        // onPointerUp\n        e.stopPropagation()\n        if (state === STATE_RESIZE) {\n          resetBodyCursor && resetBodyCursor()\n        }\n        // Excute onMouseupContainer before trigger emitState\n        setTimeout(() => {\n          emitState(e, state, 'end')\n        })\n        removeListener('move', document, moving)\n        removeListener('up', document, end)\n      }\n      addListener('move', document, moving)\n      addListener('up', document, end)\n    }\n    function addDragDown() {\n      addListener('down', vfmContent.value, pointerDown)\n      dragResizeStyle.value.touchAction = 'none'\n    }\n    function removeDragDown() {\n      removeListener('down', vfmContent.value, pointerDown)\n    }\n    function addResizeDown() {\n      visibility.resize = true\n      nextTick(() => {\n        addListener('down', vfmResize.value, pointerDown)\n      })\n    }\n    function removeResizeDown() {\n      removeListener('down', vfmResize.value, pointerDown)\n      visibility.resize = false\n    }\n    function getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute) {\n      const setOffset = dir => {\n        let offsetAxis = offset[dir.axis]\n        offsetAxis = props.fitParent ? clamp(dir.min, offsetAxis, dir.max) : offsetAxis\n        let edge = clamp(dir.minEdge, dir.getEdge(offsetAxis), dir.maxEdge)\n        offsetAxis = dir.getOffsetAxis(edge, isAbsolute)\n        return {\n          [dir.edgeName]: edge,\n          [dir.axis]: offsetAxis\n        }\n      }\n\n      const getDirectionInfo = (position, edgeName, axis, isPositive) => {\n        const rectContentEdge = rectContent[edgeName]\n        const positionOffset = rectContainer[position] - rectContent[position]\n        const EdgeName = capitalize(edgeName)\n        return {\n          axis,\n          edgeName,\n          min: isPositive ? positionOffset : -rectContentEdge,\n          max: isPositive ? rectContentEdge : positionOffset,\n          minEdge: props[`min${EdgeName}`],\n          maxEdge: props[`max${EdgeName}`],\n          getEdge: offsetAxis => rectContent[edgeName] - offsetAxis * (isPositive ? 1 : -1),\n          getOffsetAxis: (edge, isAbsolute) => {\n            const offsetAxis = rectContent[edgeName] - edge\n            if (isAbsolute) {\n              return isPositive ? offsetAxis : 0\n            } else {\n              return ((isPositive ? 1 : -1) * offsetAxis) / 2\n            }\n          }\n        }\n      }\n\n      const directions = {\n        t: ['top', 'height', 'y', true],\n        b: ['bottom', 'height', 'y', false],\n        l: ['left', 'width', 'x', true],\n        r: ['right', 'width', 'x', false]\n      }\n\n      let _offset = { x: 0, y: 0 }\n      direction.split('').forEach(dir => {\n        const directionInfo = getDirectionInfo(...directions[dir])\n        _offset = {\n          ..._offset,\n          ...setOffset(directionInfo)\n        }\n      })\n      return _offset\n    }\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      visible,\n      visibility,\n      params,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      beforeOverlayEnter,\n      afterOverlayEnter,\n      beforeOverlayLeave,\n      afterOverlayLeave,\n      beforeModalEnter,\n      afterModalEnter,\n      beforeModalLeave,\n      afterModalLeave,\n      onMousedown,\n      onMouseupContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","<template>\n  <div\n    v-if=\"ssr || visible\"\n    v-show=\"!ssr || visible\"\n    ref=\"root\"\n    :style=\"bindStyle\"\n    class=\"vfm vfm--inset\"\n    :class=\"[attach === false ? 'vfm--fixed' : 'vfm--absolute', { 'vfm--prevent-none': preventClick }]\"\n    @keydown.esc=\"onEsc\"\n  >\n    <transition\n      v-bind=\"computedOverlayTransition\"\n      @before-enter=\"beforeOverlayEnter\"\n      @after-enter=\"afterOverlayEnter\"\n      @before-leave=\"beforeOverlayLeave\"\n      @after-leave=\"afterOverlayLeave\"\n    >\n      <div\n        v-if=\"!hideOverlay && visibility.overlay\"\n        class=\"vfm__overlay vfm--overlay vfm--absolute vfm--inset\"\n        :class=\"overlayClass\"\n        :style=\"overlayStyle\"\n      ></div>\n    </transition>\n    <transition\n      v-bind=\"computedTransition\"\n      @before-enter=\"beforeModalEnter\"\n      @after-enter=\"afterModalEnter\"\n      @before-leave=\"beforeModalLeave\"\n      @after-leave=\"afterModalLeave\"\n    >\n      <div\n        v-show=\"visibility.modal\"\n        ref=\"vfmContainer\"\n        class=\"vfm__container vfm--absolute vfm--inset vfm--outline-none\"\n        :class=\"classes\"\n        :style=\"styles\"\n        :aria-expanded=\"visibility.modal.toString()\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        tabindex=\"-1\"\n        @mouseup.self=\"onMouseupContainer\"\n        @mousedown.self=\"onMousedown\"\n      >\n        <div\n          ref=\"vfmContent\"\n          class=\"vfm__content\"\n          :class=\"[contentClass, { 'vfm--prevent-auto': preventClick }]\"\n          :style=\"bindContentStyle\"\n          @mousedown=\"onMousedown(null)\"\n        >\n          <slot :params=\"params\" :close=\"() => $emit('update:modelValue', false)\" />\n          <div\n            v-if=\"visibility.resize && visibility.modal\"\n            ref=\"vfmResize\"\n            class=\"vfm__resize vfm--absolute vfm--inset vfm--prevent-none vfm--select-none vfm--touch-none\"\n          >\n            <div\n              v-for=\"direction in resizeDirections\"\n              :key=\"direction\"\n              :direction=\"direction\"\n              :class=\"`vfm--resize-${direction}`\"\n              class=\"vfm--absolute vfm--prevent-auto\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/* eslint-disable vue/no-mutating-props */\nimport { ref, reactive, onMounted, onBeforeUnmount, computed, nextTick, watch } from 'vue'\nimport { useFocusTrap } from './utils/focusTrap.js'\nimport {\n  setStyle,\n  getPosition,\n  capitalize,\n  clamp,\n  trimPx,\n  validDragElement,\n  addListener,\n  removeListener\n} from './utils/dragResize.js'\nimport { disableBodyScroll, enableBodyScroll } from './utils/bodyScrollLock'\n\nconst noop = () => {}\n\nconst TransitionState = {\n  Enter: 'enter',\n  Entering: 'entering',\n  Leave: 'leave',\n  Leaving: 'leavng'\n}\n\nconst resizeCursor = {\n  t: 'ns-resize',\n  tr: 'nesw-resize',\n  r: 'ew-resize',\n  br: 'nwse-resize',\n  b: 'ns-resize',\n  bl: 'nesw-resize',\n  l: 'ew-resize',\n  tl: 'nwse-resize'\n}\n\nexport default {\n  props: {\n    name: { type: String, default: null },\n    modelValue: { type: Boolean, default: false },\n    ssr: { type: Boolean, default: true },\n    classes: { type: [String, Object, Array], default: '' },\n    overlayClass: { type: [String, Object, Array], default: '' },\n    contentClass: { type: [String, Object, Array], default: '' },\n    styles: { type: [Object, Array], default: () => ({}) },\n    overlayStyle: { type: [Object, Array], default: () => ({}) },\n    contentStyle: { type: [Object, Array], default: () => ({}) },\n    lockScroll: { type: Boolean, default: true },\n    hideOverlay: { type: Boolean, default: false },\n    clickToClose: { type: Boolean, default: true },\n    escToClose: { type: Boolean, default: false },\n    preventClick: { type: Boolean, default: false },\n    attach: {\n      type: null,\n      default: false,\n      validator(val) {\n        const type = typeof val\n\n        if (type === 'boolean' || type === 'string') return true\n\n        return val.nodeType === Node.ELEMENT_NODE\n      }\n    },\n    transition: { type: [String, Object], default: 'vfm' },\n    overlayTransition: { type: [String, Object], default: 'vfm' },\n    keepOverlay: { type: Boolean, default: false },\n    zIndexAuto: { type: Boolean, default: true },\n    zIndexBase: { type: [String, Number], default: 1000 },\n    zIndex: { type: [Boolean, String, Number], default: false },\n    focusRetain: { type: Boolean, default: true },\n    focusTrap: { type: Boolean, default: false },\n    fitParent: { type: Boolean, default: true },\n    drag: { type: Boolean, default: false },\n    dragSelector: { type: String, default: '' },\n    keepChangedStyle: { type: Boolean, default: false },\n    resize: {\n      type: Boolean,\n      default: false\n    },\n    resizeDirections: {\n      type: Array,\n      default: () => ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'],\n      validator: val =>\n        ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'].filter(value => val.indexOf(value) !== -1).length === val.length\n    },\n    minWidth: { type: Number, default: 0 },\n    minHeight: { type: Number, default: 0 },\n    maxWidth: { type: Number, default: Infinity },\n    maxHeight: { type: Number, default: Infinity }\n  },\n  emits: [\n    'update:modelValue',\n    'click-outside',\n    'before-open',\n    'opened',\n    'before-close',\n    'closed',\n    '_before-open',\n    '_opened',\n    '_closed',\n    'drag:start',\n    'drag:move',\n    'drag:end',\n    'resize:start',\n    'resize:move',\n    'resize:end'\n  ],\n  setup(props, { emit }) {\n    const uid = Symbol('vfm')\n    const root = ref(null)\n    const vfmContainer = ref(null)\n    const vfmContent = ref(null)\n    const vfmResize = ref(null)\n    const vfmOverlayTransition = ref(null)\n    const vfmTransition = ref(null)\n\n    const modalStackIndex = ref(null)\n    const $focusTrap = useFocusTrap()\n\n    const visible = ref(false)\n    const visibility = reactive({\n      modal: false,\n      overlay: false,\n      resize: false\n    })\n    const overlayTransitionState = ref(null)\n    const modalTransitionState = ref(null)\n    const _stopEvent = ref(false)\n    const params = ref({})\n    const dragResizeStyle = ref({})\n    const _state = ref(null)\n    const lastMousedownEl = ref(null)\n\n    let resolveToggle = noop\n    let rejectToggle = noop\n\n    const computedOverlayTransition = computed(() => {\n      if (typeof props.overlayTransition === 'string') return { name: props.overlayTransition }\n      return { ...props.overlayTransition }\n    })\n\n    const computedTransition = computed(() => {\n      if (typeof props.transition === 'string') return { name: props.transition }\n      return { ...props.transition }\n    })\n\n    const isComponentReadyToBeDestroyed = computed(() => {\n      return (\n        (props.hideOverlay || overlayTransitionState.value === TransitionState.Leave) &&\n        modalTransitionState.value === TransitionState.Leave\n      )\n    })\n\n    const calculateZIndex = computed(() => {\n      if (props.zIndex === false) {\n        if (props.zIndexAuto) {\n          return +props.zIndexBase + 2 * (modalStackIndex.value || 0)\n        } else {\n          return false\n        }\n      } else {\n        return props.zIndex\n      }\n    })\n\n    const bindStyle = computed(() => {\n      return {\n        ...(calculateZIndex.value !== false && {\n          zIndex: calculateZIndex.value\n        })\n      }\n    })\n\n    const bindContentStyle = computed(() => {\n      let style = [dragResizeStyle.value]\n      Array.isArray(props.contentStyle) ? style.push(...props.contentStyle) : style.push(props.contentStyle)\n      return style\n    })\n\n    watch(\n      () => props.modelValue,\n      value => {\n        if (_stopEvent.value) {\n          _stopEvent.value = false\n          return\n        }\n        mounted()\n        if (!value) {\n          if (emitEvent('before-close', true)) {\n            rejectToggle('hide')\n            return\n          }\n          close()\n        }\n      }\n    )\n    watch(() => props.lockScroll, handleLockScroll)\n    watch(\n      () => props.hideOverlay,\n      value => {\n        if (props.modelValue && !value) {\n          visibility.overlay = true\n        }\n      }\n    )\n    watch(() => props.attach, mounted)\n    watch(\n      isComponentReadyToBeDestroyed,\n      val => {\n        if (val) {\n          visible.value = false\n          vfmContainer.value.style.display = 'none'\n        }\n      },\n      {\n        flush: 'post'\n      }\n    )\n    watch(\n      () => props.drag,\n      val => {\n        if (visible.value) {\n          val ? addDragDown() : removeDragDown()\n        }\n      }\n    )\n    watch(\n      () => props.resize,\n      val => {\n        if (visible.value) {\n          val ? addResizeDown() : removeResizeDown()\n        }\n      }\n    )\n    watch(\n      () => props.keepChangedStyle,\n      val => {\n        if (!val) {\n          dragResizeStyle.value = {}\n        }\n      }\n    )\n\n    props.api.modals.push(getModalInfo())\n\n    onMounted(() => {\n      mounted()\n    })\n    onBeforeUnmount(() => {\n      close()\n      props.lockScroll && vfmContainer.value && enableBodyScroll(vfmContainer.value)\n      root?.value?.remove()\n\n      let index = props.api.modals.findIndex(vm => vm.uid === uid)\n\n      props.api.modals.splice(index, 1)\n    })\n    function getModalInfo() {\n      return {\n        uid,\n        props,\n        emit,\n        vfmContainer,\n        vfmContent,\n        vfmResize,\n        vfmOverlayTransition,\n        vfmTransition,\n        getAttachElement,\n        modalStackIndex,\n        visibility,\n        handleLockScroll,\n        $focusTrap,\n        toggle,\n        params\n      }\n    }\n    function mounted() {\n      if (props.modelValue) {\n        emit('_before-open', createModalEvent({ type: '_before-open' }))\n        if (emitEvent('before-open', false)) {\n          rejectToggle('show')\n          return\n        }\n\n        let target = getAttachElement()\n        if (target || props.attach === false) {\n          if (props.attach !== false) {\n            if (root.value) {\n              target.appendChild(root.value)\n            } else {\n              visible.value = true\n              nextTick(() => {\n                mounted()\n              })\n              return\n            }\n          }\n\n          let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n\n          if (index !== -1) {\n            // if this is already exist in modalStack, delete it\n            props.api.openedModals.splice(index, 1)\n          }\n          props.api.openedModals.push(getModalInfo())\n\n          modalStackIndex.value = props.api.openedModals.length - 1\n\n          handleLockScroll()\n\n          props.api.openedModals\n            .filter(vm => vm.uid !== uid)\n            .forEach((vm, index) => {\n              if (vm.getAttachElement() === target) {\n                // if vm and this have the same attach element\n                vm.modalStackIndex.value = index\n                !vm.props.keepOverlay && (vm.visibility.overlay = false)\n              }\n            })\n\n          visible.value = true\n          startTransitionEnter()\n        } else if (target !== false) {\n          console.warn('Unable to locate target '.concat(props.attach))\n        }\n      }\n    }\n    function close() {\n      let index = props.api.openedModals.findIndex(vm => vm.uid === uid)\n      if (index !== -1) {\n        // remove this in modalStack\n        props.api.openedModals.splice(index, 1)\n      }\n      if (props.api.openedModals.length > 0) {\n        // If there are still nested modals opened\n        const $_vm = props.api.openedModals[props.api.openedModals.length - 1]\n\n        if ($_vm.props.focusTrap) {\n          nextTick(() => {\n            $_vm.$focusTrap.enable($_vm.vfmContainer.value)\n            $_vm.$focusTrap.firstElement.focus()\n          })\n        }\n\n        if ($_vm.props.focusRetain || $_vm.props.focusTrap) {\n          $_vm.vfmContainer.value.focus()\n        }\n        !$_vm.props.hideOverlay && ($_vm.visibility.overlay = true)\n      }\n      props.drag && removeDragDown()\n      props.resize && removeResizeDown()\n      _state.value = null\n\n      startTransitionLeave()\n    }\n    function handleLockScroll() {\n      if (props.modelValue) {\n        nextTick(() => {\n          if (props.lockScroll) {\n            disableBodyScroll(vfmContainer.value, {\n              reserveScrollBarGap: true\n            })\n          } else {\n            enableBodyScroll(vfmContainer.value)\n          }\n        })\n      }\n    }\n    function getAttachElement() {\n      let target\n      if (props.attach === false) {\n        target = false\n      } else if (typeof props.attach === 'string') {\n        // CSS selector\n        if (window) {\n          target = window.document.querySelector(props.attach)\n        } else {\n          target = false\n        }\n      } else {\n        // DOM Element\n        target = props.attach\n      }\n      return target\n    }\n    function startTransitionEnter() {\n      visibility.overlay = true\n      visibility.modal = true\n    }\n    function startTransitionLeave() {\n      visibility.overlay = false\n      visibility.modal = false\n    }\n\n    function beforeOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Entering\n    }\n    function afterOverlayEnter() {\n      overlayTransitionState.value = TransitionState.Enter\n    }\n    function beforeOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leaving\n    }\n    function afterOverlayLeave() {\n      overlayTransitionState.value = TransitionState.Leave\n    }\n    function beforeModalEnter() {\n      modalTransitionState.value = TransitionState.Entering\n    }\n    function afterModalEnter() {\n      modalTransitionState.value = TransitionState.Enter\n      if (props.focusRetain || props.focusTrap) {\n        vfmContainer.value.focus()\n      }\n      props.focusTrap && $focusTrap.enable(vfmContainer.value)\n      props.drag && addDragDown()\n      props.resize && addResizeDown()\n\n      emit('_opened')\n      emit('opened', createModalEvent({ type: 'opened' }))\n      resolveToggle('show')\n    }\n    function beforeModalLeave() {\n      modalTransitionState.value = TransitionState.Leaving\n\n      if ($focusTrap.isEnabled) {\n        $focusTrap.disable()\n      }\n    }\n    function afterModalLeave() {\n      modalTransitionState.value = TransitionState.Leave\n      modalStackIndex.value = null\n      props.lockScroll && enableBodyScroll(vfmContainer.value)\n      if (!props.keepChangedStyle) {\n        dragResizeStyle.value = {}\n      }\n\n      let stopEvent = false\n      const event = createModalEvent({\n        type: 'closed',\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit('_closed')\n      emit('closed', event)\n      resolveToggle('hide')\n      if (stopEvent) return\n      params.value = {}\n    }\n    function onMousedown(e) {\n      lastMousedownEl.value = e?.target\n    }\n    function onMouseupContainer() {\n      // skip when the lastMousedownEl didn't equal vfmContainer\n      if (lastMousedownEl.value !== vfmContainer.value) return\n      // skip when state equal 'resize:move'\n      if (_state.value === 'resize:move') return\n      emit('click-outside', createModalEvent({ type: 'click-outside' }))\n      props.clickToClose && emit('update:modelValue', false)\n    }\n    function onEsc() {\n      if (visible.value && props.escToClose) {\n        emit('update:modelValue', false)\n      }\n    }\n    function createModalEvent(eventProps = {}) {\n      return {\n        ref: getModalInfo(),\n        ...eventProps\n      }\n    }\n    function emitEvent(eventType, value) {\n      let stopEvent = false\n      const event = createModalEvent({\n        type: eventType,\n        stop() {\n          stopEvent = true\n        }\n      })\n      emit(eventType, event)\n      if (stopEvent) {\n        _stopEvent.value = true\n        nextTick(() => {\n          emit('update:modelValue', value)\n        })\n        return true\n      }\n      return false\n    }\n    function emitState(e, state, action) {\n      _state.value = `${state}:${action}`\n      emit(_state.value, e)\n    }\n    function toggle(show, _params) {\n      return new Promise((resolve, reject) => {\n        resolveToggle = res => {\n          resolve(res)\n          resolveToggle = noop\n        }\n        rejectToggle = err => {\n          reject(err)\n          rejectToggle = noop\n        }\n        const value = typeof show === 'boolean' ? show : !props.modelValue\n        if (value && arguments.length === 2) {\n          params.value = _params\n        }\n        emit('update:modelValue', value)\n      })\n    }\n    function pointerDown(e) {\n      e.stopPropagation()\n      const STATE_RESIZE = 'resize'\n      const STATE_DRAG = 'drag'\n      const direction = e.target.getAttribute('direction')\n      let state\n      if (direction) {\n        state = STATE_RESIZE\n      } else if (validDragElement(e, vfmContent.value, props.dragSelector)) {\n        state = STATE_DRAG\n      } else {\n        return\n      }\n      emitState(e, state, 'start')\n      const down = getPosition(e)\n      const rectContainer = vfmContainer.value.getBoundingClientRect()\n      const rectContent = vfmContent.value.getBoundingClientRect()\n      const isAbsolute = window.getComputedStyle(vfmContent.value).position === 'absolute'\n      const position = {\n        top: trimPx(dragResizeStyle.value.top),\n        left: trimPx(dragResizeStyle.value.left)\n      }\n      const limit = (() => {\n        if (props.fitParent) {\n          const limit = {\n            absolute() {\n              return {\n                minTop: 0,\n                minLeft: 0,\n                maxTop: rectContainer.height - rectContent.height,\n                maxLeft: rectContainer.width - rectContent.width\n              }\n            },\n            relative() {\n              return {\n                minTop: position.top + rectContainer.top - rectContent.top,\n                minLeft: position.left + rectContainer.left - rectContent.left,\n                maxTop: position.top + rectContainer.bottom - rectContent.bottom,\n                maxLeft: position.left + rectContainer.right - rectContent.right\n              }\n            }\n          }\n          return isAbsolute ? limit.absolute() : limit.relative()\n        } else {\n          return {}\n        }\n      })()\n      const resetBodyCursor = state === STATE_RESIZE && setStyle(document.body, 'cursor', resizeCursor[direction])\n\n      const moving = e => {\n        // onPointerMove\n        e.stopPropagation()\n        emitState(e, state, 'move')\n        const move = getPosition(e)\n        let offset = {\n          x: move.x - down.x,\n          y: move.y - down.y\n        }\n        if (state === STATE_RESIZE) {\n          offset = getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute)\n        }\n\n        let top\n        let left\n        if (isAbsolute) {\n          top = rectContent.top - rectContainer.top + offset.y\n          left = rectContent.left - rectContainer.left + offset.x\n        } else {\n          top = position.top + offset.y\n          left = position.left + offset.x\n        }\n        if (state === STATE_DRAG && props.fitParent) {\n          top = clamp(limit.minTop, top, limit.maxTop)\n          left = clamp(limit.minLeft, left, limit.maxLeft)\n        }\n        const style = {\n          position: 'relative',\n          top: top + 'px',\n          left: left + 'px',\n          margin: 'unset',\n          touchAction: 'none',\n          ...(isAbsolute && {\n            position: 'absolute',\n            transform: 'unset',\n            width: rectContent.width + 'px',\n            height: rectContent.height + 'px'\n          }),\n          ...(offset.width && { width: offset.width + 'px' }),\n          ...(offset.height && { height: offset.height + 'px' })\n        }\n\n        dragResizeStyle.value = {\n          ...dragResizeStyle.value,\n          ...style\n        }\n      }\n      const end = e => {\n        // onPointerUp\n        e.stopPropagation()\n        if (state === STATE_RESIZE) {\n          resetBodyCursor && resetBodyCursor()\n        }\n        // Excute onMouseupContainer before trigger emitState\n        setTimeout(() => {\n          emitState(e, state, 'end')\n        })\n        removeListener('move', document, moving)\n        removeListener('up', document, end)\n      }\n      addListener('move', document, moving)\n      addListener('up', document, end)\n    }\n    function addDragDown() {\n      addListener('down', vfmContent.value, pointerDown)\n      dragResizeStyle.value.touchAction = 'none'\n    }\n    function removeDragDown() {\n      removeListener('down', vfmContent.value, pointerDown)\n    }\n    function addResizeDown() {\n      visibility.resize = true\n      nextTick(() => {\n        addListener('down', vfmResize.value, pointerDown)\n      })\n    }\n    function removeResizeDown() {\n      removeListener('down', vfmResize.value, pointerDown)\n      visibility.resize = false\n    }\n    function getResizeOffset(direction, offset, rectContainer, rectContent, isAbsolute) {\n      const setOffset = dir => {\n        let offsetAxis = offset[dir.axis]\n        offsetAxis = props.fitParent ? clamp(dir.min, offsetAxis, dir.max) : offsetAxis\n        let edge = clamp(dir.minEdge, dir.getEdge(offsetAxis), dir.maxEdge)\n        offsetAxis = dir.getOffsetAxis(edge, isAbsolute)\n        return {\n          [dir.edgeName]: edge,\n          [dir.axis]: offsetAxis\n        }\n      }\n\n      const getDirectionInfo = (position, edgeName, axis, isPositive) => {\n        const rectContentEdge = rectContent[edgeName]\n        const positionOffset = rectContainer[position] - rectContent[position]\n        const EdgeName = capitalize(edgeName)\n        return {\n          axis,\n          edgeName,\n          min: isPositive ? positionOffset : -rectContentEdge,\n          max: isPositive ? rectContentEdge : positionOffset,\n          minEdge: props[`min${EdgeName}`],\n          maxEdge: props[`max${EdgeName}`],\n          getEdge: offsetAxis => rectContent[edgeName] - offsetAxis * (isPositive ? 1 : -1),\n          getOffsetAxis: (edge, isAbsolute) => {\n            const offsetAxis = rectContent[edgeName] - edge\n            if (isAbsolute) {\n              return isPositive ? offsetAxis : 0\n            } else {\n              return ((isPositive ? 1 : -1) * offsetAxis) / 2\n            }\n          }\n        }\n      }\n\n      const directions = {\n        t: ['top', 'height', 'y', true],\n        b: ['bottom', 'height', 'y', false],\n        l: ['left', 'width', 'x', true],\n        r: ['right', 'width', 'x', false]\n      }\n\n      let _offset = { x: 0, y: 0 }\n      direction.split('').forEach(dir => {\n        const directionInfo = getDirectionInfo(...directions[dir])\n        _offset = {\n          ..._offset,\n          ...setOffset(directionInfo)\n        }\n      })\n      return _offset\n    }\n    return {\n      root,\n      vfmContainer,\n      vfmContent,\n      vfmResize,\n      vfmOverlayTransition,\n      vfmTransition,\n      computedOverlayTransition,\n      computedTransition,\n      visible,\n      visibility,\n      params,\n      calculateZIndex,\n      bindStyle,\n      bindContentStyle,\n      beforeOverlayEnter,\n      afterOverlayEnter,\n      beforeOverlayLeave,\n      afterOverlayLeave,\n      beforeModalEnter,\n      afterModalEnter,\n      beforeModalLeave,\n      afterModalLeave,\n      onMousedown,\n      onMouseupContainer,\n      onEsc\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.vfm--fixed {\n  position: fixed;\n}\n.vfm--absolute {\n  position: absolute;\n}\n.vfm--inset {\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n.vfm--overlay {\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.vfm--prevent-none {\n  pointer-events: none;\n}\n.vfm--prevent-auto {\n  pointer-events: auto;\n}\n.vfm--outline-none:focus {\n  outline: none;\n}\n.vfm-enter-active,\n.vfm-leave-active {\n  transition: opacity 0.2s;\n}\n.vfm-enter-from,\n.vfm-leave-to {\n  opacity: 0;\n}\n\n.vfm--touch-none {\n  touch-action: none;\n}\n.vfm--select-none {\n  user-select: none;\n}\n\n.vfm--resize-tr,\n.vfm--resize-br,\n.vfm--resize-bl,\n.vfm--resize-tl {\n  width: 12px;\n  height: 12px;\n  z-index: 10;\n}\n\n.vfm--resize-t {\n  top: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-tr {\n  top: -6px;\n  right: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-r {\n  top: 0;\n  right: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-br {\n  bottom: -6px;\n  right: -6px;\n  cursor: nwse-resize;\n}\n.vfm--resize-b {\n  bottom: -6px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  cursor: ns-resize;\n}\n.vfm--resize-bl {\n  bottom: -6px;\n  left: -6px;\n  cursor: nesw-resize;\n}\n.vfm--resize-l {\n  top: 0;\n  left: -6px;\n  width: 12px;\n  height: 100%;\n  cursor: ew-resize;\n}\n.vfm--resize-tl {\n  top: -6px;\n  left: -6px;\n  cursor: nwse-resize;\n}\n</style>\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_closed=\"slice(index)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {},\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    async beforeOpen(e, modal, index) {\n      e.ref.params.value = modal.params\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"modals-container\">\n    <component\n      :is=\"modal.component\"\n      v-for=\"(modal, index) in api.dynamicModals\"\n      :key=\"modal.id\"\n      v-bind=\"modal.bind\"\n      v-model=\"modal.value\"\n      v-on=\"modal.on\"\n      @_closed=\"slice(index)\"\n      @_beforeOpen=\"e => beforeOpen(e, modal)\"\n      @_opened=\"modal.opened\"\n    >\n      <template v-for=\"(slot, key) in modal.slots\" #[key] :key=\"key\">\n        <!-- eslint-disable vue/no-v-html -->\n        <div v-if=\"isString(slot)\" v-html=\"slot\"></div>\n        <component :is=\"slot.component\" v-else v-bind=\"slot.bind\" v-on=\"slot.on || {}\" />\n      </template>\n    </component>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {},\n  methods: {\n    slice(index) {\n      this.api.dynamicModals.splice(index, 1)\n    },\n    async beforeOpen(e, modal, index) {\n      e.ref.params.value = modal.params\n      await this.$nextTick()\n      await this.$nextTick()\n      if (!modal.value) {\n        this.slice(index)\n        modal.reject('show')\n      }\n    },\n    isString(val) {\n      return typeof val === 'string'\n    }\n  }\n}\n</script>\n","import VueFinalModal from './VueFinalModal.vue'\nimport ModalsContainer from './ModalsContainer.vue'\nimport { shallowReactive } from 'vue'\n\nexport function defineApi() {\n  let _modalComponent = null\n\n  return {\n    show(modal, ...args) {\n      switch (typeof modal) {\n        case 'string':\n          return this.toggle(modal, true, ...args)\n        case 'object': {\n          return Promise.allSettled([\n            new Promise((resolve, reject) => {\n              const defaultModal = {\n                value: true,\n                id: Symbol('dynamicModal'),\n                component: _modalComponent,\n                bind: {},\n                slots: {},\n                on: {},\n                params: args[0],\n                reject,\n                opened() {\n                  resolve('show')\n                }\n              }\n              this.dynamicModals.push(shallowReactive(Object.assign(defaultModal, modal)))\n            })\n          ])\n        }\n      }\n    },\n    hide(...names) {\n      return this.toggle(names, false)\n    },\n    hideAll() {\n      return this.hide(...this.openedModals.map(modal => modal.props.name))\n    },\n    toggle(name, ...args) {\n      const modals = Array.isArray(name) ? this.get(...name) : this.get(name)\n      return Promise.allSettled(modals.map(modal => modal.toggle(...args)))\n    },\n    get(...names) {\n      return this.modals.filter(modal => names.includes(modal.props.name))\n    },\n    dynamicModals: shallowReactive([]),\n    openedModals: [],\n    modals: [],\n    _setDefaultModal(modalComponent) {\n      _modalComponent = modalComponent\n    }\n  }\n}\n\nfunction bindApi(component, api) {\n  const _component = { ...component, props: { ...component.props } }\n  Object.assign(_component.props, {\n    api: { type: Object, default: () => api }\n  })\n  return _component\n}\n\nexport function defineModal(api) {\n  const modalComponent = bindApi(VueFinalModal, api)\n  api._setDefaultModal(modalComponent)\n  return modalComponent\n}\n\nexport function defineContainer(api) {\n  return bindApi(ModalsContainer, api)\n}\n","import { defineApi, defineModal, defineContainer } from './PluginCore'\n\n/**\n * @description Ensure that `_vfm` is used when function `installPlugin` is executed for the first time\n */\nlet _count = 0\n\nconst _key = '$vfm'\nconst _componentName = 'VueFinalModal'\nconst _dynamicContainerName = 'ModalsContainer'\n\n/**\n * @description Support create multiple vfm instance\n */\nexport const defineVfm = () => {\n  let api = defineApi()\n  return {\n    [_key]: api,\n    [_componentName]: defineModal(api),\n    [_dynamicContainerName]: defineContainer(api)\n  }\n}\n\n/**\n * @description Create a vfm instance by default for directly support `import { $vfm, VueFinalModal, ModalsContainer } from 'vue-final-modal'`\n */\nconst _vfm = defineVfm()\nexport const { $vfm, VueFinalModal, ModalsContainer } = _vfm\n\n/**\n * @description Register vfm instance globally\n * @deprecated not available in vue-final-modal 4\n */\nconst installVfm = (App, options = {}) => {\n  const { $vfm, VueFinalModal, ModalsContainer } = _count === 0 ? _vfm : defineVfm()\n  _count += 1\n  const key = options.key || _key\n  const componentName = options.componentName || _componentName\n  const dynamicContainerName = options.dynamicContainerName || _dynamicContainerName\n  Object.defineProperty(App.config.globalProperties, key, {\n    get() {\n      return $vfm\n    }\n  })\n  App.provide(key, $vfm)\n  App.component(componentName, VueFinalModal)\n  App.component(dynamicContainerName, ModalsContainer)\n}\n\n/**\n * @description Vue plugin for register vfm instance globally\n * @deprecated not available in vue-final-modal 4\n */\nexport const vfmPlugin = pluginOptions => ({\n  install(App, options) {\n    const _options = Object.assign({}, pluginOptions, options)\n    installVfm(App, _options)\n  }\n})\n\nvfmPlugin.install = installVfm\n"],"names":["queryFocusableElements","element","selector","querySelectorAll","isFocused","document","activeElement","FocusTrap","root","elements","onKeyDown","this","bind","length","event","key","keyCode","isTabPressed","shiftKey","lastElement","firstElement","focus","preventDefault","addEventListener","removeEventListener","instance","getPosition","e","targetTouches","x","clientX","y","clientY","clamp","min","num","max","Math","trimPx","distance","Number","replace","pointerType","down","pc","m","move","up","addListener","type","el","callback","passive","removeListener","hasPassiveEvents","window","passiveTestOptions","previousBodyOverflowSetting","previousBodyPaddingRight","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","hasAnyScrollableEl","delta","path","push","classList","contains","parentElement","composedPath","forEach","nodeType","Node","ELEMENT_NODE","style","getComputedStyle","includes","overflowY","scrollHeight","clientHeight","hasScrollbar","scrollTop","shouldScroll","allowTouchMove","some","rawEvent","target","touches","disableBodyScroll","targetElement","options","lock","ontouchstart","ontouchmove","isTargetElementTotallyScrolled","stopPropagation","handleScroll","undefined","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","parseInt","body","getPropertyValue","paddingRight","overflow","setOverflowHidden","console","error","enableBodyScroll","filter","noop","TransitionState","resizeCursor","t","tr","r","br","b","bl","l","tl","props","name","String","modelValue","Boolean","ssr","classes","Object","Array","overlayClass","contentClass","styles","overlayStyle","contentStyle","lockScroll","hideOverlay","clickToClose","escToClose","preventClick","attach","validator","val","transition","overlayTransition","keepOverlay","zIndexAuto","zIndexBase","zIndex","focusRetain","focusTrap","fitParent","drag","dragSelector","keepChangedStyle","resize","resizeDirections","value","indexOf","minWidth","minHeight","maxWidth","Infinity","maxHeight","emits","setup","emit","uid","Symbol","ref","vfmContainer","vfmContent","vfmResize","vfmOverlayTransition","vfmTransition","modalStackIndex","$focusTrap","visible","visibility","reactive","modal","overlay","overlayTransitionState","modalTransitionState","_stopEvent","params","dragResizeStyle","_state","lastMousedownEl","resolveToggle","rejectToggle","computedOverlayTransition","computed","computedTransition","isComponentReadyToBeDestroyed","calculateZIndex","bindStyle","bindContentStyle","isArray","getModalInfo","getAttachElement","handleLockScroll","toggle","mounted","createModalEvent","emitEvent","nextTick","appendChild","index","api","openedModals","findIndex","vm","splice","warn","concat","close","$_vm","enable","removeDragDown","removeResizeDown","querySelector","eventProps","eventType","stopEvent","stop","emitState","state","action","show","_params","Promise","resolve","reject","res","err","arguments","pointerDown","STATE_RESIZE","STATE_DRAG","direction","getAttribute","validDragElement","cacheStyle","rectContainer","getBoundingClientRect","rectContent","isAbsolute","position","top","left","limit","absolute","minTop","minLeft","maxTop","height","maxLeft","width","relative","bottom","right","resetBodyCursor","moving","offset","setOffset","dir","offsetAxis","axis","edge","minEdge","getEdge","maxEdge","getOffsetAxis","edgeName","getDirectionInfo","isPositive","s","rectContentEdge","positionOffset","EdgeName","charAt","toUpperCase","slice","directions","_offset","split","directionInfo","getResizeOffset","margin","touchAction","transform","end","setTimeout","addDragDown","addResizeDown","watch","display","flush","modals","onMounted","onBeforeUnmount","remove","beforeOverlayEnter","afterOverlayEnter","beforeOverlayLeave","afterOverlayLeave","beforeModalEnter","afterModalEnter","beforeModalLeave","isEnabled","disable","afterModalLeave","onMousedown","onMouseupContainer","onEsc","$props","$setup","_createBlock","onKeydown","_createVNode","_mergeProps","onBeforeEnter","onAfterEnter","onBeforeLeave","onAfterLeave","toString","role","tabindex","onMouseup","_renderSlot","_ctx","_hoisted_1","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","styleSheet","cssText","createTextNode","methods","dynamicModals","beforeOpen","_this","$nextTick","isString","bindApi","component","_component","assign","id","_toHandlers","on","on_closed","$options","on_beforeOpen","on_opened","opened","slots","slot","_createCommentVNode","innerHTML","_count","defineVfm","_modalComponent","args","allSettled","defaultModal","shallowReactive","hide","names","hideAll","map","get","_setDefaultModal","modalComponent","VueFinalModal","defineModal","ModalsContainer","defineContainer","_vfm","$vfm","installVfm","App","componentName","dynamicContainerName","defineProperty","config","globalProperties","provide","vfmPlugin","pluginOptions","install","_options"],"mappings":"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"}